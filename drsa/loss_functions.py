# AUTOGENERATED! DO NOT EDIT! File to edit: notebooks/00_loss_functions.ipynb (unless otherwise specified).

__all__ = ['survival_rate', 'event_rate']

# Cell
import torch

# Cell

def survival_rate(h):
    """
    Given the predictied conditional hazard rate, this function estimates
    the survival rate.

    *input*:
    * `h`:
        - type: `torch.tensor`,
        - predicted conditional hazard rate, at each observed time step.
        - note: `h.shape == (batch size, 1, 1)`, as this is most amenable to use in training neural nets with pytorch.

    _output_:
    * `s`:
        - type: `torch.tensor`
        - estimated survival rate at time t.
        - note: `s.shape == (batch_size, 1)`
    """
    if len(h.shape) != 3:
        raise ValueError(f"h is of shape {h.shape}. It is expected that h is of shape (batch size, 1, 1), as this is most amenable to use in training neural nets with pytorch.")
    s = (1-h).prod(dim=1)
    return s

# Cell

def event_rate(ts):
    """
    CDF of probabilities at each time step
    """
    return 1-survival_rate(ts)